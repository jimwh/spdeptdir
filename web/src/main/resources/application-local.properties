# run as: java -jar -Dspring.profiles.active=local ./web/target/web-1.0-SNAPSHOT.war
spring.main.banner-mode=off

spring.datasource.url = jdbc:mysql://localhost:3306/deptdir?useSSL=false
spring.datasource.username = fred
spring.datasource.password = gary
#spring.datasource.password = deptdir/Gary1

# Show or not log for each sql query
spring.jpa.show-sql = false

# Keep the connection alive if idle for a long time (needed in production)
# spring.datasource.testWhileIdle = true
# spring.datasource.validationQuery = SELECT 1

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# spring.jpa.hibernate.ddl-auto = update
#

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.DefaultComponentSafeNamingStrategy

# allow hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.open-in-view=false

logging.level.root= INFO
#
#logging.level.org.springframework.web=INFO
#logging.level.org.springframework.controllers=INFO
#logging.level.org.hibernate=INFO

logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR

logging.level.deptdir=DEBUG
logging.file=./logs/deptdir.log

# logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-2level %logger{0} - %msg %n

# Logging pattern for the console

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-2level %logger{5} - %msg%n

# Logging pattern for file
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

spring.mvc.favicon.enabled=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?


server.port=8443
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=changeit
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=tomcat

## cas.server=https://casdev.cc.columbia.edu
host.name=https://cuit-1xtjdh1.ais.columbia.edu:8443
cas.server=https://cas.columbia.edu
